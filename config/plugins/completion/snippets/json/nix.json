{
  "Nix Flake": {
    "prefix": "flake",
    "body": [
      "{",
      "  # Input sources",
      "  inputs = {",
      "    nixpkgs.url = \"github:nixos/nixpkgs/${1:nixpkgs-unstable}\";",
      "    ${2:# Additional inputs here}",
      "  };",
      "",
      "  # Flake outputs",
      "  outputs = { self, nixpkgs, ... } @ inputs:",
      "    let",
      "      # List of supported systems",
      "      systems = [ \"x86_64-linux\" \"aarch64-linux\" \"x86_64-darwin\" \"aarch64-darwin\" ];",
      "      ",
      "      # Helper function to generate outputs for all systems",
      "      forAllSystems = nixpkgs.lib.genAttrs systems;",
      "    in {",
      "      # Development shells",
      "      devShells = forAllSystems (system:",
      "        let",
      "          pkgs = import nixpkgs { inherit system; };",
      "        in {",
      "          default = pkgs.mkShell {",
      "            packages = with pkgs; [",
      "              ${3:# Add your packages here}",
      "            ];",
      "          };",
      "        }",
      "      );",
      "",
      "      # Additional outputs",
      "      ${4:# Additional outputs here}",
      "    };",
      "}"
    ],
    "description": "Create a Nix Flake"
  },
  "Nix Option": {
    "prefix": "option",
    "body": [
      "${1:optionName} = lib.mkOption {",
      "  description = \"${2:Description of the option}\";",
      "  type = types.${3:str};",
      "  ${4:# Additional fields like default, example, etc.}",
      "};"
    ],
    "description": "Define an option in a Nix module"
  },
  "Nix Derivation": {
    "prefix": "derivation",
    "body": [
      "{ pkgs }:",
      "",
      "pkgs.stdenv.mkDerivation rec {",
      "  pname = \"${1:package-name}\";",
      "  version = \"${2:0.1.0}\";",
      "  ",
      "  src = ${3:./. # or fetchFromGitHub, etc.};",
      "",
      "  buildInputs = with pkgs; [",
      "    ${4}",
      "  ];",
      "",
      "  # Optional: uncomment and fill if needed",
      "  # buildPhase = ''",
      "  #   ${5:# Custom build commands if needed}",
      "  # '';",
      "",
      "  # Optional: uncomment and fill if needed",
      "  # installPhase = ''",
      "  #   ${6:# Custom install commands if needed}",
      "  # '';",
      "",
      "  meta = with lib; {",
      "    description = \"${7:A brief description of the package}\";",
      "    homepage = \"${8:https://example.com}\";",
      "    license = licenses.${9:mit};",
      "    platforms = platforms.${10:unix};",
      "    maintainers = with maintainers; [ ${11:# Add maintainer names here} ];",
      "  };",
      "}"
    ],
    "description": "Create a basic Nix derivation"
  }
}
